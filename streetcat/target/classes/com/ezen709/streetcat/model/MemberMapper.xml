<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ezen709.streetcat.model">

	<select id="listMember"   resultType="memberDTO">
		select * from cat_user  
	</select>
	
	<select id="findMember"	resultType="memberDTO" parameterType="java.util.Map">
		${sql}
	</select>
	
	<select id="getMember" resultType="memberDTO" parameterType="int">
		select * from cat_user where unum = #{unum}
	</select>

	<update id="upgradeMember" parameterType="int">
		update cat_user set grade = #{grade} where unum= #{unum}
	</update>
	
	<delete id="deleteMember" parameterType="int">
		delete cat_user where unum= #{unum}
	</delete>
	

	
	<select id="idCheck" resultType="int">
		<![CDATA[
			SELECT count(*) FROM cat_user
			WHERE userId = #{userId}
		]]>
	</select>
	
	<insert id="signUp">
		<![CDATA[
			insert into cat_user values (seq_unum.nextval, 
			#{name}, #{userId}, #{passwd}, #{email}, sysdate, 0)
		]]>
	</insert>


<!-- 수정중 -->

    <!-- 아이디 찾기 관련 mapper -->
    <select id = "find_id_check" parameterType=
   "memberDTO"
    resultType="String">
        select userId from member
        where email=#{email}
    </select>
    
    <!-- 비밀번호 찾기 관련 mapper -->
    <select id = "find_pass_check" parameterType=
   "memberDTO"
    resultType="String">
        select member_pass from member
        where userId=#{userId} and email=#{email}
    </select>
    
    
    <!-- 소셜 로그인 관련 mapper -->
    <!-- 소셜 로그인 한 후에 회원 인증 버튼을 누르면 소셜 로그인 api에서 받아온 정보를 데이터 베이스의 cat_user테이블에 저장하도록 하는 쿼리 -->
    <insert id="authentication" parameterType="memberDTO">
    insert into cat_user (userId, passwd, email)
    values (#{userId}, 0, #{email})
    </insert>
    
    
    <!-- 비밀번호 변경 관련 mapper -->
    <update id = "pass_change" parameterType="hashMap">
    update cat_user set passwd=#{passwd} where email=#{email}
    </update>
    
    
    <!-- 이메일 중복확인 관련 mapper-->
    <select id = "email_check" resultType="String">
        select email from cat_user
        where email=#{email}
    </select>
    
      
    <insert id="messageSend" parameterType="MessageDTO">
       insert into message values(seq_mnum.nextval,#{receiveId},#{sendId},#{sendName},#{content},sysdate,0,1,1)
    </insert>
    <select id="getMessage" parameterType="String" resultType="MessageDTO">
       select * from message where receiveId = #{receiveId} and receiveSee = 1 order by mnum desc
    </select>
    <select id="getSendMessage" parameterType="String" resultType="MessageDTO">
       select * from message where sendId = #{sendId} and sendSee = 1 order by mnum desc
    </select>
    <select id="getMessageContent" parameterType="int" resultType="MessageDTO">
       select * from message where mnum = #{sendId}
    </select>
    <update id="receiveDelete" parameterType="int">
       update message set receiveSee = 0 where mnum = #{mnum}
    </update>
    <update id="sendDelete" parameterType="int">
       update message set sendSee = 0 where mnum = #{mnum}
    </update>
    <update id="messageRead" parameterType="int">
       update message set read = 1 where mnum = #{mnum}
    </update>
    <select id="getMessageCount" parameterType="String" resultType="int">
       select count(*) from message where receiveId = #{mnum} and read = 0 and receiveSee = 1
    </select>
    <!-- mePage mappers -->
    <select id="getMemberBoardList" parameterType="String" resultType="CatBoardDTO">
    	select * from cat_board where writer = #{writer} order by bnum desc
    </select>
    <select id="getMemberCommentList" parameterType="String" resultType="CatBoardCommentDTO">
    	select * from cat_board_comment where writer = #{writer} order by comment_num desc
    </select>
    
</mapper>